class Solution {
    public List<int[]> getSkyline(int[][] buildings) {
        List<int[]> ans = new ArrayList<>();
        if (buildings == null || buildings.length == 0) return ans;
        List<int[]> heights = new ArrayList<>();
        for (int[] build : buildings) {
            heights.add(new int[]{build[0], build[2]});
            heights.add(new int[]{build[1], -build[2]});
        }
        Collections.sort(heights, (a, b) -> ((a[0] == b[0]) ? b[1] - a[1] : a[0] - b[0]));
        TreeMap<Integer, Integer> map = new TreeMap<>(Collections.reverseOrder());
        map.put(0, 1);
        int pre = 0;
        for (int[] height : heights) {
            if (height[1] > 0) {
                map.put(height[1], map.getOrDefault(height[1], 0) + 1);
            }
            else {
                int cnt = map.getOrDefault(-height[1], 0);
                if (cnt == 1) {
                    map.remove(-height[1]);
                }
                else if (cnt > 0) {
                    map.put(-height[1], cnt - 1);
                }
            }
            int cur = map.firstKey();
            if (cur != pre) {
                ans.add(new int[]{height[0], cur});
                pre = cur;
            }
            
        }
        return ans;
        
    }
}
