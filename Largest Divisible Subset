Java:
public class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        int len=nums.length;
        int[] dp=new int[len];
        int[] pre=new int[len];
        Arrays.sort(nums);
        int max=0;
        int idx=-1;
        for(int i=0; i<len; ++i){
            dp[i]=1;
            pre[i]=-1;
            for(int j=i-1; j>=0; --j){
                if(nums[i]%nums[j]==0 && dp[i]<dp[j]+1){
                    dp[i]=dp[j]+1;
                    pre[i]=j;
                }
            }
            if(dp[i]>max){
                max=dp[i];
                idx=i;
            }
            
        }
        
        List<Integer> ans=new ArrayList<>();
        while(idx!=-1){
            ans.add(nums[idx]);
            idx=pre[idx];
        }
        return ans;
    }
}
