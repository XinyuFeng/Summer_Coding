Java:
public class Solution {
    public TreeNode str2tree(String s) {
        if (s == null || s.length() == 0) return null;
        int firstParen = s.indexOf("(");
        int val = firstParen == -1 ? Integer.valueOf(s) : Integer.valueOf(s.substring(0, firstParen));
        TreeNode root = new TreeNode(val);
        if (firstParen == -1) return root;
        int start = firstParen, count = 0;
        for (int i = start; i < s.length(); i++) {
            if (s.charAt(i) == '(') count++;
            else if (s.charAt(i) == ')') count--;
            if (count == 0 && start == firstParen) {
                root.left = str2tree(s.substring(start + 1, i));
                start = i + 1;
            }
            else if(count == 0) {
                root.right = str2tree(s.substring(start + 1, i));
            }
        }
        
        return root;
    }
}
