Java 1:
public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        int[] T=new int[256];
        int left=0, count=0;
        int ans=0;
        
        for(int i=0; i<s.length(); ++i){
            if(T[s.charAt(i)]++ == 0) count++;
            while(count>2){
                if(--T[s.charAt(left)]==0) count--;
                left++;
            }
            ans=Math.max(ans, i-left+1);
            
        }
        return ans;
        
    }
}

Java 2:
public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        HashMap<Character, Integer> T=new HashMap<>();
        int left=0;
        int ans=0;
        for(int i=0; i<s.length(); ++i){
            T.put(s.charAt(i), i);
            if(T.size()>2){
                int leftmost=s.length();
                for(int j : T.values()){
                    leftmost=Math.min(leftmost, j);
                }
                char c=s.charAt(leftmost);
                T.remove(c);
                left=leftmost+1;
            }
            ans=Math.max(ans, i-left+1);
        }
        return ans;
        
    }
}
