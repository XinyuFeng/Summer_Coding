Java:
public class Solution {
    public int strStr(String haystack, String needle) {
        if (needle.length() == 0) return 0;
        if (haystack.length() == 0) return -1;
        char[] arr = haystack.toCharArray();
        char[] pattern = needle.toCharArray();
        int[] next = new int[pattern.length];
        nextCalc(next, pattern);
        
        int textIdx = 0;
        int patternIdx = 0;
        while (textIdx < arr.length) {
            if (arr[textIdx] == pattern[patternIdx]) {
                textIdx++;
                patternIdx++;
            }
            else if (patternIdx == 0) {
                textIdx++;
            }
            else {
                patternIdx = next[patternIdx-1];
            }
            
            if(patternIdx == pattern.length) {
                return textIdx - patternIdx;
            }
        }
        
        return -1;
    }
    
    public void nextCalc(int[] next, char[] pattern) {
        int k = 0;
        int idx = 1;
        next[0] = 0;
        while (idx < pattern.length) {
            if (pattern[idx] == pattern[k]) {
                k++;
                next[idx]=k;
                idx++;
            }
            else {
                if (k == 0) {
                    next[idx] = 0;
                    idx++;
                }
                else {
                    k = next[k - 1];
                }
            }
        }
    }
}
