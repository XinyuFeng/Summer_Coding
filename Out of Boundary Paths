public class Solution {
    public int findPaths(int m, int n, int N, int ii, int jj) {
        int[][] dp = new int[m][n];
        dp[ii][jj] = 1;
        int M = 1000000007;
        int count = 0;
        for (int move = 1; move <= N; ++move) {
            int[][] tmp = new int[m][n];
            for (int i = 0; i < m; ++i) {
                for (int j = 0; j < n; ++j) {
                    if (i == 0) {
                        count = (count + dp[i][j]) % M;
                    }
                    if (j == 0) {
                        count = (count + dp[i][j]) % M;
                    }
                    if (i == m - 1) {
                        count = (count + dp[i][j]) % M;
                    }
                    if (j == n - 1) {
                        count = (count + dp[i][j]) % M;
                    }
                    tmp[i][j] = (tmp[i][j] + (i > 0 ? dp[i - 1][j] : 0)) % M;
                    tmp[i][j] = (tmp[i][j] + (j > 0 ? dp[i][j - 1] : 0)) % M;
                    tmp[i][j] = (tmp[i][j] + (i < m - 1 ? dp[i + 1][j] : 0)) % M;
                    tmp[i][j] = (tmp[i][j] + (j < n - 1 ? dp[i][j + 1] : 0)) % M;
                    
                }
            }
            dp = tmp;
        }
    return count;  
    }
    
}
