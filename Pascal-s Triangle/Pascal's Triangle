Java:
public class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        for(int i=1; i<=numRows; ++i){
            ans.add(new ArrayList<>());
            ans.get(i-1).add(1);
            if(i>2)
                for(int j=0; j<i-2; ++j){
                    ans.get(i-1).add(ans.get(i-2).get(j)+ans.get(i-2).get(j+1));
                }
            if(i>1) ans.get(i-1).add(1);
        }
        return ans;
    }
}

C++:
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        if(numRows==0) return {};
        if(numRows==1) return {{1}};
        if(numRows==2) return {{1},{1,1}};
        vector<vector<int>>ans={{1},{1,1}};
        
        for(int i=3; i<=numRows; ++i){
            vector<int> tmp;
            tmp.push_back(1);
            for(int j=0; j<i-2; ++j){
                tmp.push_back(ans[i-2][j]+ans[i-2][j+1]);
            }
            tmp.push_back(1);
            ans.push_back(tmp);
        }
        return ans;
    }
};
