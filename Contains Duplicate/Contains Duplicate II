Java:
public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        Set<Integer> S = new HashSet<>();
        for(int i=0; i<nums.length; ++i){
            if(i>k) S.remove(nums[i-k-1]);
            if(!S.add(nums[i])) return true;
        }
        return false;
    }
}

C++:
class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_map<int, int> T;
        int len=nums.size();
        for(int i=0; i<len; ++i){
            if(T.find(nums[i])!=T.end()){
                if(i-T[nums[i]]<=k) return true;
            }
            T[nums[i]]=i;
        }
        return false;
    }
};
