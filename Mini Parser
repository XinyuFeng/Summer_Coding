Java:
public class Solution {
    public NestedInteger deserialize(String s) {
        if (s.isEmpty()) {
            return null;
        }
        if (s.charAt(0) != '[') {
           return new NestedInteger(Integer.valueOf(s)); 
        }
        
        Stack<NestedInteger> stack = new Stack<>();
        NestedInteger cur = null;
        
        int l = 0;
        for (int r = 0; r < s.length(); ++r) {
            char c = s.charAt(r);
            if (c == '[') {
                if (cur != null) {
                    stack.add(cur);
                }
                cur = new NestedInteger();
                l = r + 1;
            }
            else if (c == ']') {
                String num = s.substring(l, r);
                if (!num.isEmpty()) {
                    cur.add(new NestedInteger(Integer.valueOf(num)));
                }
                if (!stack.isEmpty()) {
                    NestedInteger pop = stack.pop();
                    pop.add(cur);
                    cur = pop;
                }
                l = r + 1;
            }
            else if (c == ',') {
                if (s.charAt(r - 1) != ']') {
                    cur.add(new NestedInteger(Integer.valueOf(s.substring(l, r))));
                }
                l = r + 1;
            }
        }
        return cur;
    }
    
}
