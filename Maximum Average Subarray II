class Solution {
    public double findMaxAverage(int[] nums, int k) {
        double min_val = Integer.MAX_VALUE;
        double max_val = Integer.MIN_VALUE;
        for (int n : nums) {
            min_val = Math.min(min_val, n);
            max_val = Math.max(max_val, n);
        }
        double error = Integer.MAX_VALUE;
        double pre = max_val;
        while (error > 0.00001) {
            double mid = min_val + (max_val - min_val) * 0.5;
            if (check(nums, mid, k)) {
                min_val = mid;
            }
            else {
                max_val = mid;
            }
            error = Math.abs(pre - mid);
            pre = mid;
        }
        return min_val;
    }
    private boolean check(int[] nums, double avg, int k) {
        double sum = 0, pre = 0, min_pre = Integer.MAX_VALUE;
        for (int i = 0; i < k; ++i) {
            sum += (nums[i] - avg);
        }
        if (sum >= 0) return true;
        for (int i = k; i < nums.length; ++i) {
            pre += (nums[i - k] - avg);
            sum += (nums[i] - avg);
            min_pre = Math.min(min_pre, pre);
            if (sum >= min_pre) return true;
        }
        return false;
        
    }
}
