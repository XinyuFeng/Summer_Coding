Java:
public class Solution {
    public int findKthLargest(int[] nums, int k) {
        shuffle(nums);
        k=nums.length-k;
        int lo=0;
        int hi=nums.length-1;
        while(lo<hi){
            int j=partition(nums, lo, hi);
            if(j<k){
                lo=j+1;
            }
            else if(j>k){
                hi=j-1;
            }
            else break;
        }
        return nums[k];
    }
    
    public void shuffle(int[] a){
        Random random=new Random();
        for(int ind=1; ind<a.length; ++ind){
            int r=random.nextInt(ind+1);
            exch(a, ind, r);
        }
    }
    
    public void exch(int[] a, int i, int j){
        int tmp=a[i];
        a[i]=a[j];
        a[j]=tmp;
    }
    
    public int partition(int[] a, int lo, int hi){
        int idx=0;
        for(int i=0; i<a.length; ++i){
            if(a[i]<a[hi]){
                exch(a, idx, i);
                ++idx;
            }
        }
        exch(a, idx, hi);
        return idx;
    }
}
