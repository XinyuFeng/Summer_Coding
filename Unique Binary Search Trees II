Java:
public class Solution {
    public List<TreeNode> generateTrees(int n) {
        List<TreeNode>[] result = new List[n + 1];
        result[0] = new ArrayList<TreeNode>();
        if (n == 0) return result[0];
        result[0].add(null);
        
        for (int i = 1; i <= n; ++i) {
            result[i] = new ArrayList<TreeNode>();
            for (int j = 0; j < i; ++j) {
                for (TreeNode l : result[j]) {
                    for (TreeNode r : result[i - j - 1]) {
                        TreeNode node = new TreeNode(j + 1);
                        node.left = l;
                        node.right = clone(r, j + 1);
                        result[i].add(node);
                    }
                }
            }
        }
        return result[n];
    }
    
    TreeNode clone(TreeNode root, int offset) {
        if (root == null) return null;
        TreeNode res = new TreeNode(root.val + offset);
        res.left = clone(root.left, offset);
        res.right = clone(root.right, offset);
        return res;
    }
}
