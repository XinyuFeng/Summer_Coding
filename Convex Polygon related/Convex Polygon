C++:
class Solution {
public:
    bool isConvex(vector<vector<int>>& points) {
        
        int n = points.size();
        long pre=0, cur;
        for(int i=0; i<n; ++i){
            cur=det(points[i], points[(i+1)%n], points[(i+2)%n]);
            if(cur==0) continue;
            if(cur*pre<0) return false;
            pre=cur;
            
        }
        return true;
    }
    
    int det(vector<int>& p1, vector<int>& p2, vector<int>& p3){
        return (p2[0]-p1[0])*(p3[1]-p1[1])-(p3[0]-p1[0])*(p2[1]-p1[1]);
    }
};

Java:
public class Solution {
    public boolean isConvex(List<List<Integer>> points) {
        int n = points.size();
        long pre=0, cur;
        
        for(int i=0; i<n; ++i){
            cur=check(points.get(i), points.get((i+1)%n), points.get((i+2)%n));
            if(cur==0) continue;
            if(cur*pre<0) return false;
            pre=cur;
        }
        return true;
    }
    
    int check(List<Integer>p1, List<Integer>p2, List<Integer>p3){
        return (p2.get(0)-p1.get(0))*(p3.get(1)-p2.get(1)) - (p3.get(0)-p2.get(0))*(p2.get(1)-p1.get(1));
    }
}

