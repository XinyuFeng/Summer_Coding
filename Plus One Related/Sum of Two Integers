C++ version1:
class Solution {
public:
    int getSum(int a, int b) {
        int ans=0;
        int c=0;
        int mask=1;
        int count=0;
        while(count<32){
            count++;
            ans|=(a&mask)^(b&mask)^c;
            c=((a&mask)&(b&mask)|(b&mask)&(c&mask)|(c&mask)&(a&mask));
            mask<<=1;
            c<<=1;
            
        }
        return ans;
    }
};

C++ version2: O(nlgn)
class Solution {
public:
    int getSum(int a, int b) {
        int carry=0;
        int sum=0;
        while(b){
            sum=a^b;
            carry=(a&b)<<1;
            b=carry;
            a=sum;
        }
        return sum;
    }
};
