class Solution {
    public boolean isPossible(int[] nums) {
        if (nums == null || nums.length == 0) {
            return false;
        }
        int len = nums.length;
        int p1 = 0, p2 = 0, p3 = 0, c1 = 0, c2 = 0, c3 = 0;
        int pre = Integer.MIN_VALUE, cnt = 0;
        for (int i = 0; i < len; ++i) {
            int cur = nums[i];
            while (i < len && nums[i] == cur) {
                cnt++;
                i++;
            }
            if (cur == pre + 1) {
                if (cnt < p1 + p2) return false;
                c2 = p1;
                c3 = p2 + Math.min(cnt - (p1 + p2), p3);
                c1 = Math.max(0, cnt - (p1 + p2 + p3));
            }
            else {
                if (p1 > 0 || p2 > 0) return false;
                c1 = cnt;
                c2 = 0;
                c3 = 0;
            }
            pre = cur;
            p1 = c1; p2 = c2; p3 = c3;
            cnt = 0;
            i--;
        }
        return p1 == 0 && p2 == 0;
    }
}
