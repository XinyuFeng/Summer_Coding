class MyQueue {

    /** Initialize your data structure here. */
    Stack<Integer> tail;
    Stack<Integer> head;
    
    public MyQueue() {
        tail = new Stack<>();
        head = new Stack<>();
    }
    
    /** Push element x to the back of queue. */
    public void push(int x) {
        tail.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    public int pop() {
        if (head.isEmpty()) {
            while (!tail.isEmpty()) {
                head.push(tail.pop());
            }
        }
        return head.pop();
    }
    
    /** Get the front element. */
    public int peek() {
        if (head.isEmpty()) {
            while (!tail.isEmpty()) {
                head.push(tail.pop());
            }
        }
        return head.peek();
    }
    
    /** Returns whether the queue is empty. */
    public boolean empty() {
        return head.isEmpty() && tail.isEmpty();
    }
}

