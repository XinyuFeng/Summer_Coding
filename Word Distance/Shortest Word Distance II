Java:
public class WordDistance {
    HashMap<String, List<Integer>> T;
    public WordDistance(String[] words) {
        T=new HashMap<>();
        for(int i=0; i<words.length; ++i){
             if(T.containsKey(words[i])){
                 T.get(words[i]).add(i);
             }
             else{
                 T.put(words[i], new ArrayList<>());
                 T.get(words[i]).add(i);
             }
        }
    }

    public int shortest(String word1, String word2) {
        List<Integer> l1=T.get(word1);
        List<Integer> l2=T.get(word2);
        int i=0, j=0;
        int ans=Integer.MAX_VALUE;
        while(i<l1.size() && j<l2.size()){
            int idx1=l1.get(i);
            int idx2=l2.get(j);
            if(idx1<idx2){
                ans=Math.min(ans, idx2-idx1);
                i++;
            }
            else{
                ans=Math.min(ans, idx1-idx2);
                j++;
            }
        }
        return ans;
    }
}
