public class BSTIterator {

    Stack<TreeNode> stack;
    public BSTIterator(TreeNode root) {
        stack = new Stack<>();
        if (root == null) return;
        TreeNode tmp = root;
        while (tmp != null) {
            stack.add(tmp);
            tmp = tmp.left;
        }
        
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !stack.isEmpty();
    }

    /** @return the next smallest number */
    public int next() {
        if (!hasNext()) return -1;
        TreeNode node = stack.pop();
        int val = node.val;
        if (node.right != null) {
            node = node.right;
            while (node != null) {
                stack.add(node);
                node = node.left;
            }
        }
        
        return val;
    }
}

