Java version:
public class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int i=0, j=numbers.length-1;
        int[] res = new int[2];
        while(i<j){
            int t = numbers[i]+numbers[j];
            if(t==target){
                res[0]=i+1;
                res[1]=j+1;
                return res;
            } 
            else if(t<target)
                i++;
            else j--;
        }
        return res;
    }
    
}

C++ version:
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int i=0, j=numbers.size()-1;
        while(i<j){
            int s=numbers[i]+numbers[j];
            if(s==target) return vector<int>{i+1,j+1};
            else if(s<target) i++;
            else j--;
        }
    }
};

Python version:
class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        i=0
        j=len(numbers)-1
        while i<j:
            t=numbers[i]+numbers[j]
            if t<target:
                i+=1
            elif t>target:
                j-=1
            else:
                return [i+1, j+1]
