Java:
public class Solution {
    public boolean exist(char[][] board, String word) {
        if(board==null || board.length==0) return false;
        int row=board.length;
        int col=board[0].length;
        for(int i=0; i<row; ++i){
            for(int j=0; j<col; ++j){
                if(dfs(board, i, j, word, 0)==true) return true;
            }
        }
        return false;
    }
    
    boolean dfs(char[][] board, int i, int j, String word, int len){
        if(len==word.length()) return true;
        if(i<0 || j<0 || i==board.length || j==board[0].length) return false;
        if(board[i][j]!=word.charAt(len)) return false;
        board[i][j]^=256;
        boolean result = dfs(board, i, j+1, word, len+1)||
                         dfs(board, i+1, j, word, len+1)||
                         dfs(board, i, j-1, word, len+1)||
                         dfs(board, i-1, j, word, len+1);
        board[i][j]^=256;
        return result;
    }
}
